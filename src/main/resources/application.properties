server.port=8081

# Actuator 최소 공개(헬스/정보/메트릭)
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

# 기본 메트릭 태그
management.metrics.tags.service=ranking-java
management.metrics.tags.env=demo

# PostgreSQL Database Configuration (auth-python과 동일 설정)
spring.datasource.url=jdbc:postgresql://postgres:5432/app
spring.datasource.username=app
spring.datasource.password=app
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Connection Pool Settings (30명 고갈 테스트 - Pool 5개, 짧은 timeout)
spring.datasource.hikari.connection-timeout=2000
spring.datasource.hikari.maximum-pool-size=6
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.leak-detection-threshold=8000
spring.datasource.hikari.max-lifetime=600000

# Tomcat Connection Settings (40명 동시 요청 대응)
server.tomcat.threads.max=20
server.tomcat.threads.min-spare=5
server.tomcat.accept-count=100
server.tomcat.max-connections=100

# Logging Configuration (디버깅용)
logging.level.app=DEBUG
